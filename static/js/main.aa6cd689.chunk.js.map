{"version":3,"sources":["logo.svg","apiConfig.tsx","auth/components/SignUp.tsx","auth/api.tsx","auth/components/SignIn.tsx","shared/Header.tsx","shared/AuthenticatedRoute.tsx","shared/autoDismissAlert.tsx","neworder/apiNewOrder.tsx","neworder/modals/PickRestaurantModal.tsx","neworder/apiNewCustomer.tsx","neworder/modals/NewCustomerModal.tsx","neworder/modals/OrderDetailsModal.tsx","neworder/components/NewOrder.tsx","shared/sharedApi.tsx","newRestaurant/api.tsx","newRestaurant/newRestaurant.tsx","dispatch/apiDispatch.tsx","dispatch/DispatchItem.tsx","dispatch/Dispatch.tsx","auth/components/SignOut.tsx","Uploader.tsx","App.tsx","serviceWorker.ts","redux/system/reducers.tsx","index.tsx","redux/system/types.tsx"],"names":["module","exports","apiUrl","apiUrls","window","location","hostname","SignUp","props","useState","email","setEmail","phone","setPhone","name","setName","fullName","setFullName","dob","setDob","className","onSubmit","event","preventDefault","credentials","fetch","method","headers","Accept","body","JSON","stringify","signUp","then","a","ok","console","log","setAlerts","alerts","title","variant","Error","res","catch","error","htmlFor","required","value","type","maxLength","placeholder","onChange","e","target","test","Button","SignIn","isConfirming","setIsConfirming","confirmationCode","setConfirmationCode","isLoading","setIsLoading","history","useHistory","confirmation","axios","url","data","confirm","user","setUser","toast","success","push","signIn","info","authenticatedOptions","Fragment","to","unauthenticatedOptions","alwaysOptions","Header","src","logo","alt","token","AuthenticatedRoute","Component","component","render","rest","AutoDismissAlert","timer","handleClose","setState","show","state","this","setInterval","clearInterval","alert","Alert","dismissible","onClose","Heading","React","getRestaurants","restaurantInput","Authorization","response","status","json","responseJson","createOrder","order","PickRestaurantModal","setRestaurantInput","options","setOptions","handleHiding","onHide","useEffect","restaurantsWithLabel","restaurants","forEach","restaurant","restaurantName","label","address","Modal","closeButton","Title","Body","Footer","onClick","setRestaurant","createCustomer","customer","companyName","addressDetails","phoneExtension","description","previousTip","adminDescription","NewCustomerModal","setCustomerName","setCompanyName","setCustomerAddress","setCustomerAddressDetails","setCustomerEmail","setCustomerPhone","setCustomerPhoneExt","setDescription","setPreviousTip","setAdminDescription","centered","animation","backdrop","size","style","alignSelf","backgroundColor","position","color","height","width","marginTop","id","setCustomer","form","OrderDetailsModal","orderTotal","setOrderTotal","adminOrderDescription","setAdminOrderDescription","tipTotal","setTipTotal","setOrderDetails","NewOrder","showModalRestaurant","setShowModalRestaurant","showModalCustomer","setShowModalCustomer","source","setSource","Date","now","pPickUpDateTime","setPPickUpDateTime","pDropOfDateTime","setPDropOfDateTime","showModalOrderDetails","setShowModalOrderDetails","orderDetails","handleDateChange","date","d","c","DropdownButton","Dropdown","Item","utils","DateFnsUtils","margin","format","KeyboardButtonProps","restaurantId","_id","customerId","orderStatus","getSuggestions","input","saveTheRestaurant","responsiblePerson","postRestaurant","NewRestaurant","setRestaurantName","setAddress","setResponsiblePerson","suggestions","setSuggestions","length","responseArr","fetchForSuggestedAddresses","map","suggestion","key","getDrivers","getOrders","query","createTrip","driver","trip","Row","styled","div","Column","DispatchItem","isVisible","setIsVisible","drivers","setDrivers","selectedDriver","setSelectedDriver","dropOffTime","setDropOffTime","pickUpTime","setPickUpTime","pickUpDate","setPickUpDate","zonedTimeToUtc","tripId","substr","k","err","Dispatch","aState","setAState","orders","setOrders","o","SignOut","clearUser","signOut","finally","Uploader","action","App","index","exact","path","Boolean","match","initialState","loggedIn","session","userName","store","createStore","payload","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.aa6cd689.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","export let apiUrl: string\r\n\r\nconst apiUrls = {\r\n  development: 'http://localhost:4741',\r\n  production: 'https://dotdot-api.herokuapp.com'\r\n}\r\n\r\nif (window.location.hostname === 'localhost') {\r\n  apiUrl = apiUrls.development\r\n} else {\r\n  apiUrl = apiUrls.production\r\n}\r\n\r\nexport default apiUrl\r\n","import React, { useState } from 'react'\r\n// import { withRouter } from 'react-router-dom'\r\n\r\nimport { signUp } from '../api'\r\nimport { Credentials } from '../../shared/types'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\ntype Props = {\r\n  setAlerts: any\r\n  alerts: Array<any>\r\n  setUser: any\r\n  history?: any\r\n}\r\n\r\nconst SignUp: React.FC<Props> = props => {\r\n  const [email, setEmail] = useState('')\r\n  const [phone, setPhone] = useState('')\r\n  const [name, setName] = useState('')\r\n  const [fullName, setFullName] = useState('')\r\n  const [dob, setDob] = useState('')\r\n\r\n  const onSignUp = (event: { preventDefault: () => void }) => {\r\n    event.preventDefault()\r\n    //console.log('history', history)\r\n    const credentials: Credentials = { email, phone, name, fullName, dob }\r\n    signUp(credentials)\r\n      .then(a => {\r\n        if (!a.ok) {\r\n          console.log('hata, ', a)\r\n          props.setAlerts([\r\n            ...props.alerts,\r\n            { title: 'Something went wrong!', variant: 'success' }\r\n          ])\r\n          throw new Error()\r\n        }\r\n      })\r\n      .then((res: any) => console.log(email, res))\r\n      .then(() =>\r\n        props.setAlerts([\r\n          ...props.alerts,\r\n          { title: `Sign up for ${name} Successful`, variant: 'success' }\r\n        ])\r\n      )\r\n      .then(() => console.log('pro'))\r\n      .catch((error: any) => {\r\n        console.error('ERR', error)\r\n        //let variant = undefined\r\n\r\n        props.setAlerts([\r\n          ...props.alerts,\r\n          { title: 'Something went wrong!', variant: 'success' }\r\n        ])\r\n      })\r\n  }\r\n\r\n  // render() {\r\n  //   const { email, password, passwordConfirmation } = this.state\r\n\r\n  return (\r\n    <div className=\"col-md-6 m-auto py-3\">\r\n      <form className=\"auth-form\" onSubmit={onSignUp}>\r\n        <h3>Sign Up</h3>\r\n\r\n        <label htmlFor=\"email\">Email</label>\r\n        <input\r\n          required\r\n          name=\"email\"\r\n          value={email}\r\n          type=\"email\"\r\n          maxLength={32}\r\n          placeholder=\"Email\"\r\n          onChange={e => setEmail(e.target.value)}\r\n        />\r\n        <label htmlFor=\"number\">Phone Number</label>\r\n        <input\r\n          required\r\n          name=\"number\"\r\n          value={phone}\r\n          type=\"text\"\r\n          maxLength={10}\r\n          placeholder=\"8572010203\"\r\n          onChange={e => {\r\n            const re = /^[0-9\\b]+$/\r\n\r\n            if (e.target.value === '' || re.test(e.target.value)) {\r\n              setPhone(e.target.value)\r\n            }\r\n          }}\r\n        />\r\n        <label htmlFor=\"text\">Full Name</label>\r\n        <input\r\n          required\r\n          name=\"text\"\r\n          value={fullName}\r\n          maxLength={32}\r\n          type=\"text\"\r\n          placeholder=\"Full Name\"\r\n          onChange={e => setFullName(e.target.value)}\r\n        />\r\n        <label htmlFor=\"text\">Nick Name</label>\r\n        <input\r\n          required\r\n          name=\"text\"\r\n          value={name}\r\n          maxLength={32}\r\n          type=\"text\"\r\n          placeholder=\"Nick\"\r\n          onChange={e => setName(e.target.value)}\r\n        />\r\n        <label htmlFor=\"text\">Date of Birth</label>\r\n        <input\r\n          required\r\n          name=\"dob\"\r\n          value={dob}\r\n          maxLength={32}\r\n          type=\"date\"\r\n          placeholder=\"12/31/1990\"\r\n          onChange={e => setDob(e.target.value)}\r\n        />\r\n        <Button variant=\"primary\" type=\"submit\">\r\n          Register\r\n        </Button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\nexport default SignUp\r\n","import { apiUrl } from '../apiConfig'\r\nimport axios from 'axios'\r\nimport { Credentials } from '../shared/types'\r\n\r\nexport const signUp = (credentials: Credentials) =>\r\n  fetch(`${apiUrl}/sign-up/`, {\r\n    method: 'Post',\r\n    headers: {\r\n      Accept: 'application/json',\r\n      'Content-Type': 'application/json',\r\n      'Accept-Language': 'ru,en;q=0.9'\r\n    },\r\n    body: JSON.stringify({\r\n      credentials: {\r\n        email: `${credentials.email}`,\r\n        phone: `${credentials.phone}`,\r\n        name: `${credentials.name}`,\r\n        fullName: `${credentials.fullName}`,\r\n        dob: `${credentials.dob}`\r\n      }\r\n    })\r\n  })\r\n\r\nexport const signIn = (credentials: Credentials) =>\r\n  axios({\r\n    url: apiUrl + '/sign-in',\r\n    method: 'POST',\r\n    data: {\r\n      credentials: {\r\n        email: credentials.email,\r\n        phone: `${credentials.phone}`,\r\n        name: `${credentials.name}`,\r\n        fullName: `${credentials.fullName}`,\r\n        dob: `${credentials.dob}`\r\n      }\r\n    }\r\n  })\r\n\r\nexport const confirm = (credentials: Credentials, confirmation: string) =>\r\n  //will be working on here\r\n  axios({\r\n    url: apiUrl + '/sign-in-confirm',\r\n    method: 'POST',\r\n    data: {\r\n      credentials: {\r\n        phone: `${credentials.phone}`,\r\n        confirmation: `${confirmation}`\r\n      }\r\n    }\r\n  })\r\nexport const signOut = user => {\r\n  return axios({\r\n    url: apiUrl + '/sign-out',\r\n    method: 'DELETE',\r\n    headers: {\r\n      Authorization: `Token token=${user.token}`\r\n    }\r\n  })\r\n}\r\n// fetch(`${apiUrl}/sign-in/`, {\r\n//   method: 'Post',\r\n//   headers: {\r\n//     Accept: 'application/json',\r\n//     'Content-Type': 'application/json',\r\n//     'Accept-Language': 'ru,en;q=0.9'\r\n//   },\r\n//   body: JSON.stringify({\r\n//     credentials: {\r\n//       email: `${credentials.email}`,\r\n//       password: `${credentials.password}`\r\n//     }\r\n//   })\r\n// })\r\n//   return axios({\r\n//     method: 'POST',\r\n//     url: apiUrl + '/sign-up',\r\n//     headers: {\r\n//       Accept: 'application/json',\r\n//       'Content-Type': 'application/json',\r\n//       'Accept-Language': 'ru,en;q=0.9'\r\n//     },\r\n//     data: {\r\n//       credentials: {\r\n//         email: credentials.email,\r\n//         password: credentials.password,\r\n//         password_confirmation: credentials.passwordConfirmation\r\n//       }\r\n//     }\r\n//   })\r\n// }\r\n\r\n// export const signIn = credentials => {\r\n//   console.log('logininin', apiUrl + '/sign-in')\r\n//   return axios({\r\n//     url: apiUrl + '/sign-in',\r\n//     method: 'POST',\r\n//     data: {\r\n//       credentials: {\r\n//         email: credentials.email,\r\n//         password: credentials.password\r\n//       }\r\n//     }\r\n//   })\r\n// }\r\n\r\n// export const signOut = user => {\r\n//   return axios({\r\n//     url: apiUrl + '/sign-out',\r\n//     method: 'DELETE',\r\n//     headers: {\r\n//       Authorization: `Token token=${user.token}`\r\n//     }\r\n//   })\r\n// }\r\n\r\n// export const changePassword = (passwords, user) => {\r\n//   return axios({\r\n//     url: apiUrl + '/change-password',\r\n//     method: 'PATCH',\r\n//     headers: {\r\n//       Authorization: `Token token=${user.token}`\r\n//     },\r\n//     data: {\r\n//       passwords: {\r\n//         old: passwords.oldPassword,\r\n//         new: passwords.newPassword\r\n//       }\r\n//     }\r\n//   })\r\n// }\r\n","import React, { useState } from 'react'\r\n// import { History } from 'history'\r\nimport { useHistory } from 'react-router-dom'\r\n// import { useDispatch } from 'react-redux'\r\n\r\nimport { signIn, confirm } from '../api'\r\nimport { Credentials } from '../../shared/types'\r\nimport Button from 'react-bootstrap/Button'\r\n// import { updateSession } from '../../redux/system/actions'\r\nimport { toast } from 'react-toastify'\r\n\r\ntype Props = {\r\n  setAlerts: any\r\n  alerts: Array<any>\r\n  setUser: any\r\n}\r\n\r\nconst SignIn: React.FC<Props> = props => {\r\n  // eslint-disable-next-line\r\n  const [email, setEmail] = useState('st@st.com')\r\n  const [phone, setPhone] = useState('8572065397')\r\n  // eslint-disable-next-line\r\n  const [name, setName] = useState()\r\n  // eslint-disable-next-line\r\n  const [fullName, setFullName] = useState()\r\n  // eslint-disable-next-line\r\n  const [dob, setDob] = useState()\r\n  const [isConfirming, setIsConfirming] = useState(false)\r\n  const [confirmationCode, setConfirmationCode] = useState('4344')\r\n  const [isLoading, setIsLoading] = useState(false)\r\n\r\n  //const [passwordConfirmation, setPasswordConfirmation] = useState()\r\n  let history = useHistory()\r\n  // const dispatch = useDispatch()\r\n\r\n  const credentials: Credentials = { email, phone, name, fullName, dob }\r\n  const onSignIn = (event: { preventDefault: () => void }) => {\r\n    event.preventDefault()\r\n    setIsLoading(true)\r\n    console.log('SIgning')\r\n    setIsConfirming(true)\r\n    signIn(credentials)\r\n      .then((res: any) => {\r\n        console.log('signIn', res.data.user)\r\n        props.setUser(res.data.user)\r\n\r\n        // dispatch(updateSession(res.data.user.token))\r\n      })\r\n      .then(() => {\r\n        toast.info('Please enter your four-digit code')\r\n        setIsLoading(false)\r\n      })\r\n      .catch((error: any) => {\r\n        toast.error('Something went wrong. Please try again')\r\n        setIsLoading(false)\r\n        setIsConfirming(false)\r\n      })\r\n  }\r\n  const onSubmitCnf = (event: { preventDefault: () => void }) => {\r\n    event.preventDefault()\r\n    setIsLoading(true)\r\n    console.log('Signing In Confirm')\r\n\r\n    confirm(credentials, confirmationCode)\r\n      .then((res: any) => {\r\n        console.log('SignInConfirm', res.data.user)\r\n        props.setUser(res.data.user)\r\n        // dispatch(updateSession(res.data.user.token))\r\n      })\r\n      .then(() => {\r\n        toast.success('Welcome')\r\n        setIsLoading(false)\r\n      })\r\n      .then(() => {\r\n        history.push('/dispatch')\r\n      })\r\n      .catch((error: any) => {\r\n        console.error('ErrorInSubmit', error)\r\n        toast.error('Please re-enter the confirmation code')\r\n      })\r\n  }\r\n\r\n  if (isLoading) {\r\n    return <div>loading</div>\r\n  }\r\n\r\n  return (\r\n    <div className=\"col-md-6 m-auto py-3\">\r\n      {!isConfirming ? (\r\n        <form className=\"auth-form\" onSubmit={onSignIn}>\r\n          <h3>Sign In</h3>\r\n          <label htmlFor=\"email\">Phone</label>\r\n          <input\r\n            required\r\n            name=\"phone\"\r\n            value={phone}\r\n            type=\"text\"\r\n            placeholder=\"8572012020\"\r\n            onChange={e => setPhone(e.target.value)}\r\n          />\r\n          <label htmlFor=\"email\">Have your phone ready!</label>\r\n\r\n          <Button variant=\"primary\" type=\"submit\">\r\n            Sign In\r\n          </Button>\r\n        </form>\r\n      ) : (\r\n        <form className=\"auth-form\" onSubmit={onSubmitCnf}>\r\n          <h3>Enter the confirmation code</h3>\r\n          <label htmlFor=\"email\">4 digit code</label>\r\n          <input\r\n            required\r\n            name=\"phone\"\r\n            value={confirmationCode}\r\n            type=\"text\"\r\n            placeholder=\"\"\r\n            onChange={e => setConfirmationCode(e.target.value)}\r\n          />\r\n\r\n          <Button variant=\"primary\" type=\"submit\">\r\n            Sign In\r\n          </Button>\r\n        </form>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\nexport default SignIn\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport './Header.scss'\r\nimport { User } from './types'\r\nimport logo from '../logo.svg'\r\n\r\nconst authenticatedOptions = (\r\n  <React.Fragment>\r\n    <Link to=\"/dispatch\">Dispatch</Link>\r\n    <Link to=\"/new-order\">New Order</Link>\r\n    <Link to=\"/new-restaurant\">Add New Restaurant</Link>\r\n    <Link to=\"/sign-out\">Sign Out</Link>\r\n  </React.Fragment>\r\n)\r\n\r\nconst unauthenticatedOptions = (\r\n  <React.Fragment>\r\n    <Link to=\"/sign-up\">Sign Up</Link>\r\n    <Link to=\"/sign-in\">Sign In</Link>\r\n  </React.Fragment>\r\n)\r\n\r\nconst alwaysOptions = (\r\n  <React.Fragment>\r\n    <Link to=\"/\">Home</Link>\r\n  </React.Fragment>\r\n)\r\n\r\ntype Props = {\r\n  user: User\r\n}\r\n\r\nconst Header: React.FC<Props> = props => {\r\n  const { user } = props\r\n  //console.log(user)\r\n  return (\r\n    <header className=\"main-header\">\r\n      <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n      <h2>Foodie Fliers</h2>\r\n      <nav>\r\n        {user && user.token && <span>Welcome, {user.name}</span>}\r\n        {user && user.token ? authenticatedOptions : unauthenticatedOptions}\r\n        {alwaysOptions}\r\n      </nav>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport { Route, Redirect } from 'react-router-dom'\r\n\r\n// props will include a `user` object or empty object\r\n// props will include a `component` as `Component` or a `render`\r\n// all other props that may be passed in are `..rest`\r\ntype Props = {\r\n  user: any\r\n  component?: any\r\n  exact?: boolean\r\n  render: any\r\n  path: string\r\n}\r\nconst AuthenticatedRoute: React.FC<Props> = ({\r\n  user,\r\n  component: Component,\r\n  render,\r\n  ...rest\r\n}) => {\r\n  // if props include a `user` object and a `render` then create route with `render`\r\n  if (user && render) {\r\n    return <Route {...rest} render={render} />\r\n    // if props include a `user` object but no `render` then create route with `Component`\r\n    // if props do not include a `user` object then redirect to home\r\n  } else {\r\n    return (\r\n      <Route\r\n        {...rest}\r\n        render={props =>\r\n          user ? <Component {...props} /> : <Redirect to=\"/\" />\r\n        }\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nexport default AuthenticatedRoute\r\n","import React from 'react'\r\nimport Alert, { AlertProps } from 'react-bootstrap/Alert'\r\n\r\ntype Props = {\r\n  dismissible: boolean\r\n  alert: AlertProps\r\n  onClose: () => void\r\n}\r\n\r\ninterface ComponentState {\r\n  show: boolean\r\n}\r\n\r\nclass AutoDismissAlert extends React.Component<Props, ComponentState> {\r\n  timer!: NodeJS.Timeout\r\n  constructor(props: Props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      show: true\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.timer = setInterval(() => {\r\n      this.setState({ show: false })\r\n    }, 4000)\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.timer)\r\n  }\r\n\r\n  handleClose = () => this.setState({ show: false })\r\n\r\n  render() {\r\n    const { alert } = this.props\r\n    return (\r\n      <Alert\r\n        dismissible\r\n        show={this.state.show}\r\n        variant={alert.variant}\r\n        onClose={this.handleClose}\r\n      >\r\n        <div className=\"container\">\r\n          <Alert.Heading>{alert.title}</Alert.Heading>\r\n        </div>\r\n      </Alert>\r\n    )\r\n  }\r\n}\r\n\r\nexport default AutoDismissAlert\r\n","import { apiUrl } from '../apiConfig'\r\nimport { User, Order } from '../shared/types'\r\n\r\nexport const getRestaurants = async (user: User, restaurantInput: string) => {\r\n  const response = await fetch(`${apiUrl}/restaurants/`, {\r\n    method: 'Get',\r\n    headers: {\r\n      Authorization: 'Bearer ' + user.token,\r\n      'Content-Type': 'application/json'\r\n    }\r\n  })\r\n  if (response.status === 200) {\r\n    const responseJson = await response.json()\r\n    return responseJson\r\n  } else {\r\n    return false\r\n  }\r\n}\r\nexport const createOrder = async (order: Order, user: User) => {\r\n  const token = user.token\r\n  const response = await fetch(`${apiUrl}/orders/`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      Authorization: 'Bearer ' + token\r\n    },\r\n    body: JSON.stringify({\r\n      ...order\r\n    })\r\n  })\r\n  if (response.status === 201) {\r\n    const responseJson = await response.json()\r\n    return { ...responseJson, status: 201 }\r\n  } else {\r\n    return false\r\n  }\r\n}\r\n\r\nexport const searchPhone = async (phone: number, user: User) => {\r\n  const token = user.token\r\n  const response = await fetch(`${apiUrl}/customers/${phone}`, {\r\n    method: 'GET',\r\n    headers: {\r\n      Authorization: 'Bearer ' + token\r\n    }\r\n  })\r\n  if (response.status === 200) {\r\n    const responseJson = await response.json()\r\n    return responseJson\r\n  } else {\r\n    return false\r\n  }\r\n}\r\n\r\n// export const getSuggestions = async (address: string, user: User) => {\r\n//   const token = user.token\r\n//   const response = await fetch(`${apiUrl}/google-maps-masker/${address}`, {\r\n//     method: 'GET',\r\n//     headers: {\r\n//       Authorization: 'Bearer ' + token\r\n//     }\r\n//   })\r\n//   if (response.status === 200) {\r\n//     const responseJson = await response.json()\r\n//     console.log('responseJson', responseJson)\r\n//     return responseJson\r\n//   } else {\r\n//     return false\r\n//   }\r\n// }\r\n\r\ntype Data = {\r\n  phoneNumber: number\r\n  address: string\r\n  name: string\r\n}\r\nexport const saveTheAddress = async (\r\n  phoneNumber: number,\r\n  address: string,\r\n  name: string,\r\n  user: User\r\n) => {\r\n  const data = {\r\n    phoneNumber,\r\n    address,\r\n    name\r\n  }\r\n  // openMap({ end: this.state.currentAddress, navigate_mode: \"navigate\" });\r\n  postAddress(data, user)\r\n}\r\n\r\nexport const postAddress = async (data: Data, user: User) => {\r\n  const token = user.token\r\n\r\n  const response = await fetch(`${apiUrl}/customers/`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      Authorization: 'Bearer ' + token\r\n    },\r\n    body: JSON.stringify({\r\n      customer: {\r\n        name: data.name,\r\n        phone: data.phoneNumber,\r\n        currentAddress: data.address\r\n      }\r\n    })\r\n  })\r\n\r\n  const responseJson = await response.json()\r\n  console.log(\r\n    'reponse postAddress',\r\n    responseJson,\r\n    'responseCode',\r\n    response.status\r\n  )\r\n  return response.status === 1 ? true : false\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\n\r\nimport { User } from '../../shared/types'\r\nimport Button from 'react-bootstrap/Button'\r\nimport { getRestaurants } from '../apiNewOrder'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Select from 'react-select'\r\n\r\ntype Props = {\r\n  user: User\r\n  show: boolean\r\n  onHide: any\r\n  setRestaurant: (d: string) => void\r\n}\r\nconst PickRestaurantModal: React.FC<Props> = props => {\r\n  const [restaurantInput, setRestaurantInput] = useState<any>(null)\r\n  // const [selectedOption, setSelectedOption] = useState<any>()\r\n  const [options, setOptions] = useState([])\r\n\r\n  const handleHiding = () => {\r\n    props.onHide()\r\n  }\r\n  const saveAndHide = () => {\r\n    console.log('restaurant input', restaurantInput)\r\n    props.onHide()\r\n    props.setRestaurant(restaurantInput)\r\n  }\r\n  useEffect(() => {\r\n    getRestaurants(props.user, restaurantInput).then(res => {\r\n      console.log('Rsp Restaurants', res)\r\n      const restaurantsWithLabel: any = []\r\n      res.restaurants.forEach((restaurant: any) =>\r\n        restaurantsWithLabel.push({\r\n          value: restaurant.restaurantName,\r\n          label: `${restaurant.restaurantName} - ${restaurant.address}`,\r\n          ...restaurant\r\n        })\r\n      )\r\n      console.log('restaurantsWithLabel', restaurantsWithLabel)\r\n      setOptions(restaurantsWithLabel)\r\n    })\r\n  }, [props, restaurantInput])\r\n\r\n  return (\r\n    <>\r\n      <Modal show={props.show} onHide={handleHiding}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Select a Restaurant, or Add a New One</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          Please add restaurant from the previos screen and select it here\r\n        </Modal.Body>\r\n        <div className=\"col-md-6 m-auto py-3\">\r\n          {/*<input\r\n            required\r\n            name=\"credit\"\r\n            value={restaurantInput}\r\n            type=\"text\"\r\n            placeholder=\"Shake Shack\"\r\n            onChange={e => {\r\n              //setRestaurantInput(e.target.value)\r\n            }}\r\n          />*/}\r\n          <Select\r\n            value={restaurantInput}\r\n            name={restaurantInput}\r\n            onChange={setRestaurantInput}\r\n            options={options}\r\n          />\r\n        </div>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleHiding}>\r\n            Close\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={saveAndHide}>\r\n            Save Changes\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  )\r\n}\r\nexport default PickRestaurantModal\r\n","import { apiUrl } from '../apiConfig'\r\n// import axios from 'axios'\r\n// import { Credentials, User, Customer } from '../shared/types'\r\nimport { User, Customer } from '../shared/types'\r\n\r\n// export const getRestaurants = async (user: User, restaurantInput: string) => {\r\n//   const response = await fetch(`${apiUrl}/restaurants/`, {\r\n//     method: 'Get',\r\n//     headers: {\r\n//       Authorization: 'Bearer ' + user.token,\r\n//       'Content-Type': 'application/json'\r\n//     }\r\n//   })\r\n//   if (response.status === 200) {\r\n//     const responseJson = await response.json()\r\n//     return responseJson\r\n//   } else {\r\n//     return false\r\n//   }\r\n// }\r\n\r\n// export const createCustomer = (credentials: Credentials, customer: Customer) =>\r\n//   fetch(`${apiUrl}/new-order/`, {\r\n//     method: 'Post',\r\n//     headers: {\r\n//       Accept: 'application/json',\r\n//       'Content-Type': 'application/json',\r\n//       'Accept-Language': 'ru,en;q=0.9'\r\n//     },\r\n//     body: JSON.stringify({\r\n//       credentials: {\r\n//         email: `${credentials.email}`\r\n//       }\r\n//     })\r\n//   })\r\n\r\nexport const createCustomer = async (customer: Customer, user: User) => {\r\n  const token = user.token\r\n  const response = await fetch(`${apiUrl}/customers/`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      Authorization: 'Bearer ' + token\r\n    },\r\n    body: JSON.stringify({\r\n      // customer object\r\n      name: customer.name,\r\n      companyName: customer.companyName,\r\n      address: customer.address,\r\n      addressDetails: customer.email,\r\n      phone: customer.phone,\r\n      phoneExtension: customer.phoneExtension,\r\n      description: customer.description,\r\n      previousTip: customer.previousTip,\r\n      adminDescription: customer.adminDescription\r\n    })\r\n  })\r\n  if (response.status === 201) {\r\n    const responseJson = await response.json()\r\n    return { ...responseJson, status: 201 }\r\n  } else {\r\n    return false\r\n  }\r\n}\r\n\r\n// SELCUK add search customers here\r\n// export const searchPhone = async (phone: number, user: User) => {\r\n//   // const token = SecureStore.getItemAsync('secure_token')\r\n//   // console.log('searchByPhone network', user.token)\r\n\r\n//   // const token = await SecureStore.getItemAsync('secure_token')\r\n//   // console.log('apiurl', apiUrl)\r\n//   const token = user.token\r\n//   const response = await fetch(`${apiUrl}/customers/${phone}`, {\r\n//     method: 'GET',\r\n//     headers: {\r\n//       Authorization: 'Bearer ' + token\r\n//     }\r\n//   })\r\n//   if (response.status === 200) {\r\n//     const responseJson = await response.json()\r\n//     return responseJson\r\n//   } else {\r\n//     return false\r\n//   }\r\n// }\r\n","import React, { useState } from 'react'\r\n// import { History } from 'history'\r\n\r\n//import { signIn } from '../api'\r\nimport { User, Customer } from '../../shared/types'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport { createCustomer } from '../apiNewCustomer'\r\nimport Loader from 'react-loader-spinner'\r\nimport { toast } from 'react-toastify'\r\ntype Props = {\r\n  show: boolean\r\n  onHide: any\r\n  customer: Customer\r\n  setCustomer: (c: Customer) => void\r\n  user: User\r\n}\r\n\r\nconst NewCustomerModal: React.FC<Props> = props => {\r\n  const [name, setCustomerName] = useState()\r\n  const [companyName, setCompanyName] = useState()\r\n  const [address, setCustomerAddress] = useState()\r\n  const [addressDetails, setCustomerAddressDetails] = useState()\r\n\r\n  const [email, setCustomerEmail] = useState()\r\n  const [phone, setCustomerPhone] = useState()\r\n  const [phoneExtension, setCustomerPhoneExt] = useState()\r\n\r\n  const [description, setDescription] = useState()\r\n  const [previousTip, setPreviousTip] = useState()\r\n  const [adminDescription, setAdminDescription] = useState()\r\n  const [isLoading, setIsLoading] = useState(false)\r\n\r\n  const handleHiding = () => {\r\n    props.onHide()\r\n  }\r\n  const saveAndHide = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault()\r\n    setIsLoading(true)\r\n    const customer = {\r\n      name,\r\n      companyName,\r\n      address,\r\n      addressDetails,\r\n      email,\r\n      phone,\r\n      phoneExtension,\r\n      description,\r\n      previousTip,\r\n      adminDescription\r\n    }\r\n    createCustomer(customer, props.user)\r\n      .then(res => {\r\n        if (res.status === 201) {\r\n          toast.success('Customer Created!')\r\n        } else {\r\n          throw Error\r\n        }\r\n        return res\r\n      })\r\n      .then(res => {\r\n        console.log('Customer has been set ', res.customer)\r\n        props.setCustomer(res.customer)\r\n      })\r\n      .catch(e => {\r\n        toast.error('Something went wrong. Please try again code:', e.status)\r\n      })\r\n    setIsLoading(false)\r\n    props.onHide()\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        show={isLoading}\r\n        centered\r\n        animation={false}\r\n        backdrop={'static'}\r\n        size={'sm'}\r\n      >\r\n        <div\r\n          style={{\r\n            alignSelf: 'center',\r\n            backgroundColor: '',\r\n            position: 'absolute'\r\n          }}\r\n        >\r\n          <Loader type=\"TailSpin\" color=\"#000\" height={80} width={80} />\r\n          <p style={{ color: 'white', marginTop: 16 }}>Loading Please Wait</p>\r\n        </div>\r\n      </Modal>\r\n      <Modal show={props.show} onHide={handleHiding}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Customer</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>Enter Customer Details</Modal.Body>\r\n\r\n        <form id=\"new-customer-form\" onSubmit={saveAndHide}>\r\n          <div className=\"col-md-6 m-auto py-3\">\r\n            <label htmlFor=\"number\">Customer Name</label>\r\n            <input\r\n              required\r\n              name=\"customerName\"\r\n              value={name}\r\n              type=\"text\"\r\n              placeholder=\"Shake Shack\"\r\n              onChange={e => {\r\n                setCustomerName(e.target.value)\r\n              }}\r\n            />\r\n            <label htmlFor=\"number\">Company Name</label>\r\n\r\n            <input\r\n              required\r\n              name=\"companyName\"\r\n              value={companyName}\r\n              type=\"text\"\r\n              placeholder=\"Wayfair-BackBay\"\r\n              onChange={e => {\r\n                setCompanyName(e.target.value)\r\n              }}\r\n            />\r\n            <label htmlFor=\"number\">Address</label>\r\n\r\n            {/* selcuk=> burayi google inputlu yap*/}\r\n            <input\r\n              required\r\n              name=\"credit\"\r\n              value={address}\r\n              type=\"text\"\r\n              placeholder=\"4 Copley Place\"\r\n              onChange={e => {\r\n                setCustomerAddress(e.target.value)\r\n              }}\r\n            />\r\n            {/* <==selcuk yukariyi google inputlu yap*/}\r\n            <label htmlFor=\"number\">Address Details</label>\r\n\r\n            <input\r\n              name=\"credit\"\r\n              value={addressDetails}\r\n              type=\"text\"\r\n              placeholder=\"Suite 2020\"\r\n              onChange={e => {\r\n                setCustomerAddressDetails(e.target.value)\r\n              }}\r\n            />\r\n            <label htmlFor=\"number\">Customer Email</label>\r\n\r\n            <input\r\n              name=\"credit\"\r\n              value={email}\r\n              type=\"text\"\r\n              placeholder=\"jennifer@wayfair.com\"\r\n              onChange={e => {\r\n                setCustomerEmail(e.target.value)\r\n              }}\r\n            />\r\n            <label htmlFor=\"number\">Phone #</label>\r\n\r\n            <input\r\n              required\r\n              name=\"credit\"\r\n              value={phone}\r\n              type=\"text\"\r\n              placeholder=\"6172002020\"\r\n              onChange={e => {\r\n                setCustomerPhone(e.target.value)\r\n              }}\r\n            />\r\n            <label htmlFor=\"number\">Phone # extension</label>\r\n\r\n            <input\r\n              name=\"credit\"\r\n              value={phoneExtension}\r\n              type=\"text\"\r\n              placeholder=\"talk directly to front desk\"\r\n              onChange={e => {\r\n                setCustomerPhoneExt(e.target.value)\r\n              }}\r\n            />\r\n            <label htmlFor=\"number\">Description</label>\r\n\r\n            <input\r\n              name=\"credit\"\r\n              value={description}\r\n              type=\"text\"\r\n              placeholder=\"hard to find the office\"\r\n              onChange={e => {\r\n                setDescription(e.target.value)\r\n              }}\r\n            />\r\n            <label htmlFor=\"number\">Previous Tips</label>\r\n\r\n            <input\r\n              name=\"credit\"\r\n              value={previousTip}\r\n              type=\"text\"\r\n              placeholder=\"Generous tips\"\r\n              onChange={e => {\r\n                setPreviousTip(e.target.value)\r\n              }}\r\n            />\r\n            <label htmlFor=\"number\">Admin Notes</label>\r\n\r\n            <input\r\n              name=\"credit\"\r\n              value={adminDescription}\r\n              type=\"text\"\r\n              placeholder=\"hidden from drivers\"\r\n              onChange={e => {\r\n                setAdminDescription(e.target.value)\r\n              }}\r\n            />\r\n          </div>\r\n        </form>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleHiding}>\r\n            Close\r\n          </Button>\r\n          <Button form=\"new-customer-form\" type=\"submit\" variant=\"primary\">\r\n            Save Changes\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  )\r\n}\r\nexport default NewCustomerModal\r\n","import React, { useState } from 'react'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport { OrderDetails } from '../../shared/types'\r\n\r\ntype Props = {\r\n  show: boolean\r\n  onHide: any\r\n  orderDetails: OrderDetails\r\n  setOrderDetails: (data: OrderDetails) => void\r\n}\r\n\r\nconst OrderDetailsModal: React.FC<Props> = props => {\r\n  const [description, setDescription] = useState()\r\n  const [orderTotal, setOrderTotal] = useState()\r\n  const [adminOrderDescription, setAdminOrderDescription] = useState()\r\n  const [tipTotal, setTipTotal] = useState()\r\n\r\n  const handleHiding = () => {\r\n    props.onHide()\r\n  }\r\n  const saveAndHide = () => {\r\n    props.onHide()\r\n    props.setOrderDetails({\r\n      orderTotal,\r\n      tipTotal,\r\n      description,\r\n      adminOrderDescription\r\n    })\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Modal show={props.show} onHide={handleHiding}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Customer</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>Enter Customer Details</Modal.Body>\r\n\r\n        <div className=\"col-md-6 m-auto py-3\">\r\n          <label htmlFor=\"number\">Order Total</label>\r\n          <input\r\n            required\r\n            name=\"tipTotal\"\r\n            value={orderTotal}\r\n            type=\"number\"\r\n            placeholder=\"650\"\r\n            onChange={e => setOrderTotal(e.target.value)}\r\n          />\r\n          <label htmlFor=\"text\">Tip Total</label>\r\n\r\n          <input\r\n            required\r\n            name=\"tipTotal\"\r\n            value={tipTotal}\r\n            type=\"number\"\r\n            placeholder=\"70\"\r\n            onChange={e => setTipTotal(e.target.value)}\r\n          />\r\n          <label htmlFor=\"text\">Description</label>\r\n\r\n          <input\r\n            name=\"description\"\r\n            value={description}\r\n            type=\"text\"\r\n            placeholder=\"heavy order, pastas\"\r\n            onChange={e => {\r\n              setDescription(e.target.value)\r\n            }}\r\n          />\r\n          <label htmlFor=\"text\">Admin Description</label>\r\n\r\n          <input\r\n            name=\"adminOrderDescription\"\r\n            value={adminOrderDescription}\r\n            type=\"text\"\r\n            placeholder=\"send the best driver here, needs to be rushed\"\r\n            onChange={e => {\r\n              setAdminOrderDescription(e.target.value)\r\n            }}\r\n          />\r\n        </div>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleHiding}>\r\n            Close\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={saveAndHide}>\r\n            Save Changes\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  )\r\n}\r\nexport default OrderDetailsModal\r\n","import React, { useState } from 'react'\r\n// import { History } from 'history'\r\n\r\n//import { signIn } from '../api'\r\nimport { User, Customer, OrderDetails } from '../../shared/types'\r\nimport Button from 'react-bootstrap/Button'\r\nimport PickRestaurantModal from '../modals/PickRestaurantModal'\r\nimport CustomerModal from '../modals/NewCustomerModal'\r\nimport DropdownButton from 'react-bootstrap/DropdownButton'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\nimport 'date-fns'\r\nimport DateFnsUtils from '@date-io/date-fns'\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker,\r\n  KeyboardDatePicker\r\n} from '@material-ui/pickers'\r\nimport OrderDetailsModal from '../modals/OrderDetailsModal'\r\nimport { toast, ToastContainer } from 'react-toastify'\r\nimport { createOrder } from '../apiNewOrder'\r\n\r\ntype Props = {\r\n  user: User\r\n  alerts: Array<any>\r\n  setAlerts: any\r\n}\r\ntype Suggestion = {\r\n  description: string\r\n  id: string\r\n}\r\n\r\nconst NewOrder: React.FC<Props> = props => {\r\n  // restaurant saves here as an object value:... , address: ..., name: ...\r\n  const [restaurant, setRestaurant] = useState()\r\n  const [showModalRestaurant, setShowModalRestaurant] = useState(false)\r\n\r\n  const [customer, setCustomer] = useState()\r\n  const [showModalCustomer, setShowModalCustomer] = useState(false)\r\n\r\n  const [source, setSource] = useState('ezCater')\r\n\r\n  const [pPickUpDateTime, setPPickUpDateTime] = useState(\r\n    new Date(Date.now() + 24 * 60 * 60 * 1000)\r\n  )\r\n  const [pDropOfDateTime, setPDropOfDateTime] = useState(\r\n    new Date(Date.now() + 24 * 60 * 60 * 1000)\r\n  )\r\n\r\n  const [showModalOrderDetails, setShowModalOrderDetails] = useState(false)\r\n\r\n  // const [description, setDescription] = useState()\r\n  const [orderDetails, setOrderDetails] = useState()\r\n  // const [assignedDriver, setAssignedDriver] = useState()\r\n\r\n  const handleHiding = () => {\r\n    setShowModalRestaurant(false)\r\n    setShowModalCustomer(false)\r\n    setShowModalOrderDetails(false)\r\n  }\r\n\r\n  const handleDateChange = (date: any) => {\r\n    setPPickUpDateTime(date)\r\n  }\r\n\r\n  const handleDropOffDateChange = (date: any) => {\r\n    setPDropOfDateTime(date)\r\n  }\r\n  // const handleSetOrderTotal = (value: any) => {\r\n  //   console.log('its updating the state')\r\n  //   //setOrderTotal(value)\r\n  // }\r\n  return (\r\n    <>\r\n      {/*__MODALS*/}\r\n      <PickRestaurantModal\r\n        show={showModalRestaurant}\r\n        onHide={handleHiding}\r\n        user={props.user}\r\n        setRestaurant={(d: string) => setRestaurant(d)}\r\n      />\r\n      <CustomerModal\r\n        show={showModalCustomer}\r\n        onHide={handleHiding}\r\n        customer={customer}\r\n        setCustomer={(c: Customer) => setCustomer(c)}\r\n        user={props.user}\r\n      />\r\n      <OrderDetailsModal\r\n        show={showModalOrderDetails}\r\n        onHide={handleHiding}\r\n        orderDetails={orderDetails}\r\n        setOrderDetails={(data: OrderDetails) => setOrderDetails(data)}\r\n      />\r\n      {/*__^^^ MODALS ^^^^ */}\r\n      <div className=\"col-md-6 m-auto py-3\">\r\n        <form className=\"auth-form\" onSubmit={() => console.log('heyo')}>\r\n          <h3>Create an Order</h3>\r\n          <ToastContainer />\r\n          <label htmlFor=\"number\">Restaurant</label>\r\n          <Button onClick={() => setShowModalRestaurant(true)}>\r\n            {restaurant ? restaurant.value : 'Select a restaurant'}\r\n          </Button>\r\n\r\n          <label htmlFor=\"number\">Customer</label>\r\n\r\n          <Button\r\n            onClick={() => {\r\n              setShowModalCustomer(true)\r\n            }}\r\n          >\r\n            {customer ? customer.companyName : 'Enter Customer Details'}\r\n          </Button>\r\n\r\n          <label htmlFor=\"number\">Source</label>\r\n\r\n          <DropdownButton id=\"dropdown-basic-button\" title={source}>\r\n            <Dropdown.Item\r\n              onClick={() => {\r\n                console.log('customer>>', customer)\r\n                toast.success('Customer Creating!')\r\n                console.log('orderDetails>', orderDetails)\r\n                setSource('ezCater')\r\n              }}\r\n            >\r\n              eZCater\r\n            </Dropdown.Item>\r\n            <Dropdown.Item onClick={() => setSource('Other')}>\r\n              Other\r\n            </Dropdown.Item>\r\n          </DropdownButton>\r\n\r\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n            <KeyboardDatePicker\r\n              margin=\"normal\"\r\n              id=\"Promised Pick-Up Date\"\r\n              label=\"Order Date\"\r\n              format=\"MM/dd/yyyy\"\r\n              value={pPickUpDateTime}\r\n              onChange={handleDateChange}\r\n              KeyboardButtonProps={{\r\n                'aria-label': 'change date'\r\n              }}\r\n            />\r\n            <KeyboardTimePicker\r\n              margin=\"normal\"\r\n              id=\"time-picker\"\r\n              label=\"Promised Pick-up Time\"\r\n              value={pPickUpDateTime}\r\n              onChange={handleDateChange}\r\n              KeyboardButtonProps={{\r\n                'aria-label': 'change time'\r\n              }}\r\n            />\r\n          </MuiPickersUtilsProvider>\r\n\r\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n            <KeyboardTimePicker\r\n              margin=\"normal\"\r\n              id=\"time-picker\"\r\n              label=\"Promised Drop-off Time\"\r\n              value={pDropOfDateTime}\r\n              onChange={handleDropOffDateChange}\r\n              KeyboardButtonProps={{\r\n                'aria-label': 'change time'\r\n              }}\r\n            />\r\n          </MuiPickersUtilsProvider>\r\n          <Button onClick={() => setShowModalOrderDetails(true)}>\r\n            {'Order Details'}\r\n          </Button>\r\n          <Button\r\n            onClick={() => {\r\n              toast.success('Creating an order.. Please Wait')\r\n              const order = {\r\n                restaurantId: restaurant._id,\r\n                customerId: customer._id,\r\n                source,\r\n                pPickUpDateTime,\r\n                pDropOfDateTime,\r\n                orderStatus: 'Waiting Triage',\r\n                orderTotal:\r\n                  orderDetails && orderDetails.orderTotal\r\n                    ? orderDetails.orderTotal\r\n                    : 0,\r\n                tipTotal:\r\n                  orderDetails && orderDetails.tipTotal\r\n                    ? orderDetails.tipTotal\r\n                    : 0,\r\n                description:\r\n                  orderDetails && orderDetails.description\r\n                    ? orderDetails.description\r\n                    : '',\r\n                adminOrderDescription:\r\n                  orderDetails && orderDetails.adminOrderDescription\r\n                    ? orderDetails.adminOrderDescription\r\n                    : ''\r\n              }\r\n              createOrder(order, props.user)\r\n                .then(res => {\r\n                  if (res.status === 201) {\r\n                    toast.success('Order Created!')\r\n                  } else {\r\n                    throw Error\r\n                  }\r\n                  return res\r\n                })\r\n                .catch(e => {\r\n                  toast.error(\r\n                    'Something went wrong. Please try again. Error code:',\r\n                    e.status\r\n                  )\r\n                })\r\n            }}\r\n          >\r\n            {'Create the Order'}\r\n          </Button>\r\n          {/*suggestions &&\r\n          suggestions.length > 0 &&\r\n          suggestions.map((suggestion: Suggestion, key: number) => (\r\n            <Button\r\n              variant=\"primary\"\r\n              key={key}\r\n              type=\"button\"\r\n              onClick={() => {\r\n                saveTheAddress(\r\n                  phoneNumber,\r\n                  suggestion.description,\r\n                  name,\r\n                  props.user\r\n                )\r\n                cleanFields()\r\n              }}\r\n            >\r\n              {suggestion.description}\r\n            </Button>\r\n            ))*/}\r\n        </form>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\nexport default NewOrder\r\n","import { apiUrl } from '../apiConfig'\r\nimport { User } from './types'\r\n\r\nexport const getSuggestions = async (input: string, user: User) => {\r\n  const token = user.token\r\n  const response = await fetch(`${apiUrl}/google-maps-masker/${input}`, {\r\n    method: 'GET',\r\n    headers: {\r\n      Authorization: 'Bearer ' + token\r\n    }\r\n  })\r\n  if (response.status === 200) {\r\n    const responseJson = await response.json()\r\n    console.log('responseJson', responseJson)\r\n    return responseJson\r\n  } else {\r\n    return false\r\n  }\r\n}\r\n","import { User } from '../shared/types'\r\nimport apiUrl from '../apiConfig'\r\n\r\ntype Data = {\r\n  restaurantName: number\r\n  responsiblePerson: string\r\n  address: string\r\n  phone: string\r\n  description: string\r\n  adminDescription: string\r\n}\r\n\r\nexport const saveTheRestaurant = async (\r\n  restaurantName: number,\r\n  address: string,\r\n  responsiblePerson: string,\r\n  phone: string,\r\n  description: string,\r\n  adminDescription: string,\r\n  user: User\r\n) => {\r\n  const data = {\r\n    restaurantName,\r\n    address,\r\n    responsiblePerson,\r\n    phone,\r\n    description,\r\n    adminDescription\r\n  }\r\n  // openMap({ end: this.state.currentAddress, navigate_mode: \"navigate\" });\r\n  postRestaurant(data, user)\r\n}\r\n\r\nexport const postRestaurant = async (data: Data, user: User) => {\r\n  const token = user.token\r\n\r\n  const response = await fetch(`${apiUrl}/restaurants/`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      Authorization: 'Bearer ' + token\r\n    },\r\n    body: JSON.stringify({\r\n      restaurant: {\r\n        restaurantName: data.restaurantName,\r\n        address: data.address,\r\n        responsiblePerson: data.responsiblePerson,\r\n        phone: data.phone,\r\n        description: data.description,\r\n        adminDescription: data.adminDescription\r\n      }\r\n    })\r\n  })\r\n  return response\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\n// import { History } from 'history'\r\n// import { useHistory } from 'react-router-dom'\r\n\r\n//import { signIn } from '../api'\r\n// import { Credentials, User } from '../shared/types'\r\nimport { User } from '../shared/types'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nimport { getSuggestions } from '../shared/sharedApi'\r\nimport { saveTheRestaurant } from './api'\r\n\r\ntype Props = {\r\n  user: User\r\n  alerts: Array<any>\r\n  setAlerts: any\r\n}\r\ntype Suggestion = {\r\n  description: string\r\n  id: string\r\n}\r\n\r\nconst NewRestaurant: React.FC<Props> = props => {\r\n  const [restaurantName, setRestaurantName] = useState()\r\n  const [address, setAddress] = useState()\r\n  const [responsiblePerson, setResponsiblePerson] = useState()\r\n  const [phone, setPhone] = useState()\r\n  const [description, setDescription] = useState()\r\n  const [adminDescription, setAdminDescription] = useState()\r\n\r\n  const [suggestions, setSuggestions] = useState()\r\n\r\n  useEffect(() => {\r\n    async function fetchForSuggestedAddresses() {\r\n      if (address && address.length > 4) {\r\n        const response = await getSuggestions(address, props.user)\r\n        if (response === false) {\r\n          props.setAlerts([\r\n            ...props.alerts,\r\n            {\r\n              title:\r\n                'getSuggestions failed. Please change the input and try again',\r\n              variant: 'danger'\r\n            }\r\n          ])\r\n        }\r\n        console.log('retrieved addresses', response.response)\r\n        const responseArr = response.response\r\n        setSuggestions([...responseArr])\r\n      }\r\n    }\r\n    fetchForSuggestedAddresses()\r\n  }, [address, props])\r\n\r\n  const cleanFields = () => {\r\n    setPhone('')\r\n    setAddress('')\r\n    setResponsiblePerson('')\r\n    setRestaurantName('')\r\n    setDescription('')\r\n    setAdminDescription('')\r\n    setSuggestions('')\r\n  }\r\n  return (\r\n    <div className=\"col-md-6 m-auto py-3\">\r\n      <form\r\n        className=\"auth-form\"\r\n        onSubmit={event => {\r\n          event?.preventDefault()\r\n          saveTheRestaurant(\r\n            restaurantName,\r\n            address,\r\n            responsiblePerson,\r\n            phone,\r\n            description,\r\n            adminDescription,\r\n            props.user\r\n          )\r\n          cleanFields()\r\n        }}\r\n      >\r\n        <h3>Add new restaurant</h3>\r\n        <label htmlFor=\"text\">Restaurant Name</label>\r\n        <input\r\n          name=\"name\"\r\n          value={restaurantName}\r\n          type=\"text\"\r\n          placeholder=\"Shake Shack\"\r\n          onChange={e => setRestaurantName(e.target.value)}\r\n        />\r\n\r\n        <label htmlFor=\"number\">Phone Number</label>\r\n        <input\r\n          required\r\n          name=\"phoneNumber\"\r\n          value={phone}\r\n          type=\"text\"\r\n          placeholder=\"6172827141\"\r\n          maxLength={10}\r\n          onChange={e => {\r\n            const re = /^[0-9\\b]+$/\r\n\r\n            if (e.target.value === '' || re.test(e.target.value)) {\r\n              setPhone(e.target.value)\r\n            }\r\n          }}\r\n        />\r\n\r\n        <label htmlFor=\"text\">Address</label>\r\n        <input\r\n          required\r\n          name=\"Address\"\r\n          value={address}\r\n          type=\"text\"\r\n          placeholder=\"125 Summer St\"\r\n          onChange={e => setAddress(e.target.value)}\r\n        />\r\n        <label htmlFor=\"number\">Responsible Person</label>\r\n\r\n        <input\r\n          name=\"responsiblePerson\"\r\n          value={responsiblePerson}\r\n          type=\"text\"\r\n          placeholder=\"Nick Papadapolos\"\r\n          onChange={e => setResponsiblePerson(e.target.value)}\r\n        />\r\n\r\n        <label htmlFor=\"email\">Description</label>\r\n        <input\r\n          name=\"description\"\r\n          value={description}\r\n          type=\"text\"\r\n          placeholder=\"Hard to find Parking\"\r\n          onChange={e => setDescription(e.target.value)}\r\n        />\r\n\r\n        <label htmlFor=\"email\">Admin Description</label>\r\n        <input\r\n          name=\"adminDescription\"\r\n          value={adminDescription}\r\n          type=\"text\"\r\n          placeholder=\"Always having problems, low tips- Will Not be shared with Drivers\"\r\n          onChange={e => setAdminDescription(e.target.value)}\r\n        />\r\n\r\n        {suggestions &&\r\n          suggestions.length > 0 &&\r\n          suggestions.map((suggestion: Suggestion, key: number) => (\r\n            <Button\r\n              variant=\"primary\"\r\n              key={key}\r\n              type=\"button\"\r\n              onClick={() => {\r\n                setAddress(suggestion.description)\r\n                setSuggestions([])\r\n              }}\r\n            >\r\n              {suggestion.description}\r\n            </Button>\r\n          ))}\r\n        <Button variant=\"primary\" type=\"submit\">\r\n          Create\r\n        </Button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\nexport default NewRestaurant\r\n","import { User, Order } from '../shared/types'\r\nimport apiUrl from '../apiConfig'\r\n\r\nexport const getDrivers = async (user: User) => {\r\n  const response = await fetch(`${apiUrl}/users/`, {\r\n    method: 'Get',\r\n    headers: {\r\n      Authorization: 'Bearer ' + user.token,\r\n      'Content-Type': 'application/json'\r\n    }\r\n  })\r\n  if (response.status === 200) {\r\n    const responseJson = await response.json()\r\n    return responseJson\r\n  } else {\r\n    return false\r\n  }\r\n}\r\nexport const getOrders = async (user: User, query: String) => {\r\n  const response = await fetch(`${apiUrl}/orders?query=${query}`, {\r\n    method: 'Get',\r\n    headers: {\r\n      Authorization: 'Bearer ' + user.token,\r\n      'Content-Type': 'application/json'\r\n    }\r\n  })\r\n  if (response.status === 200) {\r\n    const responseJson = await response.json()\r\n    return responseJson\r\n  } else {\r\n    return false\r\n  }\r\n}\r\n\r\nexport const createTrip = async (user: User, order: Order, driver: User) => {\r\n  const token = user.token\r\n  const response = await fetch(`${apiUrl}/trips/`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      Authorization: 'Bearer ' + token\r\n    },\r\n    body: JSON.stringify({\r\n      trip: {\r\n        driver,\r\n        order\r\n      }\r\n    })\r\n  })\r\n  if (response.status === 201) {\r\n    //const responseJson = await response.json()\r\n    return response\r\n  } else {\r\n    return false\r\n  }\r\n}\r\n","import React, { FC, useState, useEffect } from 'react'\r\nimport { createTrip } from './apiDispatch'\r\nimport { User, Order } from '../shared/types'\r\nimport { zonedTimeToUtc } from 'date-fns-tz'\r\nimport Button from 'react-bootstrap/Button'\r\nimport styled from 'styled-components'\r\nimport { format } from 'date-fns'\r\n\r\nimport DropdownButton from 'react-bootstrap/DropdownButton'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\ntype Props = {\r\n  user: User\r\n  order: Order\r\n  drivers: Array<User>\r\n}\r\nconst DispatchItem: FC<Props> = props => {\r\n  const [isVisible, setIsVisible] = useState(true)\r\n  // eslint-disable-next-line\r\n  const [aState, setAState] = useState()\r\n  // eslint-disable-next-line\r\n  const [orders, setOrders] = useState([])\r\n  const [drivers, setDrivers] = useState()\r\n  const [selectedDriver, setSelectedDriver] = useState()\r\n  const [dropOffTime, setDropOffTime] = useState()\r\n  const [pickUpTime, setPickUpTime] = useState()\r\n  const [pickUpDate, setPickUpDate] = useState()\r\n\r\n  const { order } = props\r\n  useEffect(() => {\r\n    setDrivers(props.drivers)\r\n    setPickUpTime(\r\n      format(zonedTimeToUtc(order.pPickUpDateTime, 'America/New_York'), 'hh:mm')\r\n    )\r\n    setPickUpDate(\r\n      format(\r\n        zonedTimeToUtc(order.pDropOfDateTime, 'America/New_York'),\r\n        'yyyy/MM/dd'\r\n      )\r\n    )\r\n    setDropOffTime(\r\n      format(zonedTimeToUtc(order.pDropOfDateTime, 'America/New_York'), 'hh:mm')\r\n    )\r\n  }, [props.drivers, order.pPickUpDateTime, order.pDropOfDateTime])\r\n\r\n  if (!isVisible) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <Row>\r\n      <Column>\r\n        <p>{order.restaurantId.restaurantName}</p>\r\n        <p>{order.restaurantId.address}</p>\r\n        <p>{'--'}</p>\r\n      </Column>\r\n      <Column>\r\n        <p>{order.customerId.companyName}</p>\r\n        <p>{order.customerId.address}</p>\r\n        <p>{order.customerId.addressDetails}</p>\r\n      </Column>\r\n      <Column>\r\n        <p>\r\n          {order.tripId && order.tripId.driver\r\n            ? order.tripId.driver.fullName\r\n            : 'No Driver'}\r\n        </p>\r\n        <p>{selectedDriver ? selectedDriver.name : order.orderStatus}</p>\r\n        <p>\r\n          {selectedDriver\r\n            ? selectedDriver._id.substr(selectedDriver._id.length - 5)\r\n            : null}\r\n        </p>\r\n      </Column>\r\n      <Column>\r\n        <p>{'Pick up on ' + pickUpDate}</p>\r\n        <p>{'Pick up at ' + pickUpTime}</p>\r\n      </Column>\r\n      <Column>\r\n        <p>{'Drop off at ' + dropOffTime}</p>\r\n      </Column>\r\n      <DropdownButton id=\"dropdown-basic-button\" title={'Select a Driver'}>\r\n        {drivers &&\r\n          drivers.map((d: User, k) => (\r\n            <Dropdown.Item\r\n              key={k}\r\n              onClick={() => {\r\n                setSelectedDriver(d)\r\n\r\n                console.log('driver>>', d)\r\n                console.log('Order>', order)\r\n              }}\r\n            >\r\n              {d.name + ' - ' + d._id.substr(d._id.length - 5)}\r\n            </Dropdown.Item>\r\n          ))}\r\n      </DropdownButton>\r\n      <Button\r\n        onClick={() => {\r\n          createTrip(props.user, props.order, selectedDriver)\r\n            .then(res => {\r\n              console.log('Trip Created!component hidden ', res)\r\n              if (res) {\r\n                setIsVisible(false)\r\n              }\r\n            })\r\n            .catch(err => console.log('err', err))\r\n        }}\r\n      >\r\n        Edit{' '}\r\n      </Button>\r\n      <p>___________________________________________________________</p>\r\n    </Row>\r\n  )\r\n}\r\nconst Row = styled.div`\r\n  flex: 1;\r\n  flex-direction: column;\r\n  padding: 10px;\r\n  background-color: white;\r\n`\r\nconst Column = styled.div`\r\n  flex: 1;\r\n  display: inline-block;\r\n  width: 200px;\r\n  padding: 10px;\r\n  background-color: white;\r\n`\r\n\r\nexport default DispatchItem\r\n","import React, { FC, useState, useEffect } from 'react'\r\nimport { getDrivers, getOrders } from './apiDispatch'\r\nimport { User, Order } from '../shared/types'\r\n// import { getOverlappingDaysInIntervals } from 'date-fns'\r\nimport Button from 'react-bootstrap/Button'\r\nimport DispatchItem from './DispatchItem'\r\n\r\ntype Props = {\r\n  user: User\r\n}\r\nconst Dispatch: FC<Props> = props => {\r\n  const [aState, setAState] = useState()\r\n  const [orders, setOrders] = useState([])\r\n  const [drivers, setDrivers] = useState([])\r\n\r\n  useEffect(() => {\r\n    getDrivers(props.user).then(response => {\r\n      console.log('getDrivers>>', response)\r\n      setDrivers(response)\r\n    })\r\n\r\n    const query = 'Waiting Triage'\r\n    getOrders(props.user, query).then(response => {\r\n      console.log('getOrders>>', response)\r\n      setOrders(response)\r\n    })\r\n  }, [aState, props])\r\n\r\n  // getOrders(props.user, query).then(response => {\r\n  //   console.log('getOrders>>', response)\r\n  //   setDrivers(response)\r\n  // })\r\n  const { user } = props\r\n  return (\r\n    <div className=\"col-md-12 m-auto py-3\">\r\n      <h1>Dispatch Drivers</h1>\r\n      <Button onClick={() => setAState(aState + 1)}>Refresh</Button>\r\n      <Button\r\n        onClick={() => {\r\n          console.log('drivers', drivers)\r\n          console.log('orders', orders)\r\n        }}\r\n      >\r\n        Console.log\r\n      </Button>\r\n      <Button\r\n        onClick={() =>\r\n          getOrders(props.user, 'Assigned').then(res => {\r\n            setOrders(res)\r\n          })\r\n        }\r\n      >\r\n        Show Assigned Orders\r\n      </Button>\r\n      {orders &&\r\n        orders.map((o: Order, key) => (\r\n          <DispatchItem key={key} user={user} order={o} drivers={drivers} />\r\n        ))}\r\n    </div>\r\n  )\r\n}\r\nexport default Dispatch\r\n","import React, { useEffect } from 'react'\r\n// import { withRouter } from 'react-router-dom'\r\n\r\nimport { signOut } from '../api'\r\nimport { User } from '../../shared/types'\r\n// import Button from 'react-bootstrap/Button'\r\nimport { toast } from 'react-toastify'\r\n\r\ntype Props = {\r\n  clearUser: () => void\r\n  user: User\r\n}\r\n\r\nconst SignOut: React.FC<Props> = props => {\r\n  // const [email, setEmail] = useState('')\r\n  const { clearUser, user } = props\r\n\r\n  useEffect(() => {\r\n    console.log('quiting')\r\n    signOut(user)\r\n      .finally(() => toast.success('Sign Out Successful'))\r\n      .finally(() => clearUser())\r\n  })\r\n\r\n  return (\r\n    <div className=\"col-md-6 m-auto py-3\">\r\n      <h1>Come Back Again!</h1>\r\n    </div>\r\n  )\r\n}\r\nexport default SignOut\r\n","import React, { useState } from 'react'\r\nimport RUG from 'react-upload-gallery'\r\nimport 'react-upload-gallery/dist/style.css' // or scss\r\nimport apiUrl from './apiConfig'\r\n\r\ntype Props = {\r\n\r\n}\r\n\r\nconst Uploader: React.FC<Props> = props => {\r\n  // eslint-disable-next-line\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  if (isLoading) {\r\n    \r\n    return <div>loading</div>\r\n  }\r\n\r\n  return (\r\n    <div className=\"col-md-6 m-auto py-3\">\r\n      <h1>aqsdsad</h1>\r\n      <RUG\r\n        action=\"/api/upload\" // upload route\r\n        source={response => response.source} // response image source\r\n      />\r\n    </div>\r\n  )\r\n}\r\nexport default Uploader\r\n","import React from 'react'\r\n// import logo from './logo.svg'\r\nimport './App.scss'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\r\nimport SignUp from './auth/components/SignUp'\r\n// import { createBrowserHistory } from 'history'\r\nimport SignIn from './auth/components/SignIn'\r\nimport Header from './shared/Header'\r\nimport AuthenticatedRoute from './shared/AuthenticatedRoute'\r\nimport AutoDismissAlert from './shared/autoDismissAlert'\r\nimport { AlertProps } from 'react-bootstrap/Alert'\r\nimport NewOrder from './neworder/components/NewOrder'\r\nimport NewRestaurant from './newRestaurant/newRestaurant'\r\nimport { ToastContainer } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css'\r\nimport Dispatch from './dispatch/Dispatch'\r\nimport SignOut from './auth/components/SignOut'\r\nimport Uploader from './Uploader'\r\n\r\nconst { useState } = React\r\n\r\nconst App: React.FC = () => {\r\n  const [user, setUser] = useState()\r\n  const [alerts, setAlerts] = useState([])\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <main className=\"container\">\r\n        <ToastContainer />\r\n        <Router>\r\n          <Header user={user}></Header>\r\n          {alerts.length > 0 &&\r\n            alerts.map((alert: AlertProps, index) => (\r\n              <AutoDismissAlert\r\n                key={index}\r\n                dismissible\r\n                onClose={() => setAlerts([])}\r\n                alert={alert}\r\n              >\r\n                <p>{alert.title}</p>\r\n              </AutoDismissAlert>\r\n            ))}\r\n          <Switch>\r\n            { user && <AuthenticatedRoute\r\n              user={user}\r\n              exact\r\n              path=\"/\"\r\n              render={() => (\r\n                <div>\r\n                  <h1>Under Construction</h1>\r\n                </div>\r\n              )}\r\n            />}\r\n            <AuthenticatedRoute\r\n              user={user}\r\n              exact\r\n              path=\"/dispatch\"\r\n              render={() => <Dispatch user={user}></Dispatch>}\r\n            />\r\n            <AuthenticatedRoute\r\n              user={user}\r\n              exact\r\n              path=\"/new-order\"\r\n              render={() => (\r\n                <NewOrder\r\n                  alerts={alerts}\r\n                  setAlerts={setAlerts}\r\n                  user={user}\r\n                ></NewOrder>\r\n              )}\r\n            />\r\n            <AuthenticatedRoute\r\n              user={user}\r\n              exact\r\n              path=\"/new-restaurant\"\r\n              render={() => (\r\n                <NewRestaurant\r\n                  alerts={alerts}\r\n                  setAlerts={setAlerts}\r\n                  user={user}\r\n                ></NewRestaurant>\r\n              )}\r\n            />\r\n            <AuthenticatedRoute\r\n              user={user}\r\n              exact\r\n              path=\"/sign-out\"\r\n              render={() => (\r\n                <SignOut user={user} clearUser={() => setUser(null)}></SignOut>\r\n              )}\r\n            />\r\n            <Route\r\n              path=\"/sign-up\"\r\n              render={() => (\r\n                <SignUp\r\n                  alerts={alerts}\r\n                  setAlerts={setAlerts}\r\n                  setUser={setUser}\r\n                />\r\n              )}\r\n            />\r\n\r\n            <Route\r\n              path=\"/sign-in\"\r\n              render={() => (\r\n                <SignIn\r\n                  alerts={alerts}\r\n                  setAlerts={setAlerts}\r\n                  setUser={setUser}\r\n                />\r\n              )}\r\n            />\r\n            <Route\r\n              path=\"/\"\r\n              render={() => (\r\n                <Uploader\r\n                />\r\n              )}\r\n            />\r\n          </Switch>\r\n        </Router>\r\n      </main>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { UPDATE_SESSION, SystemState, SystemActionTypes } from './types'\r\n\r\nconst initialState: SystemState = {\r\n  loggedIn: false,\r\n  session: '',\r\n  userName: ''\r\n}\r\n\r\nexport function systemReducer(\r\n  state = initialState,\r\n  action: SystemActionTypes\r\n): SystemState {\r\n  switch (action.type) {\r\n    case UPDATE_SESSION: {\r\n      return {\r\n        ...state,\r\n        ...action.payload\r\n      }\r\n    }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './App'\r\nimport * as serviceWorker from './serviceWorker'\r\nimport { Provider } from 'react-redux'\r\nimport { systemReducer } from './redux/system/reducers'\r\nimport { createStore } from 'redux'\r\n\r\nconst store = createStore(systemReducer)\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n","// Describing the shape of the system's slice of state\r\nexport interface SystemState {\r\n  loggedIn: boolean\r\n  session: string\r\n  userName: string\r\n}\r\n\r\n// Describing the different ACTION NAMES available\r\nexport const UPDATE_SESSION = 'UPDATE_SESSION'\r\n\r\ninterface UpdateSessionAction {\r\n  type: typeof UPDATE_SESSION\r\n  payload: SystemState\r\n}\r\n\r\nexport type SystemActionTypes = UpdateSessionAction\r\n"],"sourceRoot":""}